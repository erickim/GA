% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select.R
\name{select}
\alias{select}
\title{Genetic Algorithms Initial Population Creation}
\usage{
select(Y, X, regType = "lm", family = "gaussian", fitness = "AIC",
  ranked = TRUE, selectionType = "twoprop", elitism = TRUE,
  crossoverType = "single", numCrossover = NA, mutationRate = 0.01,
  maxIter = 100, P = 2 * ncol(X), seed = 1, VERBOSE = FALSE)
}
\arguments{
\item{Y}{The response vector.}

\item{X}{The feature matrix.}

\item{regType}{The model of an appropriate class ("lm" and "glm").
This is used as the initial model in the genetic search.
The default model is 'lm'.}

\item{family}{The family to be passed into 'glm'.
The family can be 'binomial', 'gaussian', 'gamma', 'inverse.gaussian',
'possion', 'quasi', 'quasibinomial', 'quasipoisson'.
The default family is "gaussian" family.}

\item{fitness}{The fitness function to describe the fitness of all
chromosomes in the generation. The default fitness function is negative
'AIC'. Please make sure your user inputted fitness function has high
values for good candidates.}

\item{ranked}{Logical; if TRUE parents are selected based on the
rank of fitness values. The default is TRUE.
See page 80 in Givens/Hoeting.}

\item{selectionType}{the type of selection mechanism
("oneprop" and "twoprop"), which describes the process by which
parents are chosen to produce offspring.
The default selection mechanism is 'twoprop'.
See page 76 of Givens/Hoeting.}

\item{elitism}{Logical; if TRUE the fittest individual to
survive at each generation. The default is 'TRUE'.}

\item{crossoverType}{The type of crossover operation
("single" and "multiple"), which describe the process of
generating offsprings by combing part of the genetic information
from their parents. The default is 'single'.}

\item{numCrossover}{The number of splits for type 'multiple'.
The default number is 2.}

\item{mutationRate}{The rate of mutation, which indicates the
probability of mutating for each gene. Mutation is a genetic operation
that changes an offspring chromosome by randomly introducing one or
more alleles in loci. The default rate is 0.01.}

\item{maxIter}{The maximum number of iterations to run before the
GA search is halted. The defaulte number is 100.}

\item{P}{The population size.}

\item{seed}{The seed for reproducibility.}

\item{VERBOSE}{Logical; if 'TRUE' prints which generation the algorithm
is currently at.}
}
\value{
A list of the final candidate where the list contains
\itemize{
\item \code{variables}: The variables that were
selected in the final population
\item \code{fit}: The \code{lm} or \code{glm} object of the fit with the
above variables.
\item \code{fitness} : The value of the fitness.
\item \code{fitnessType} : The type of fitness.
\item \code{lengthElitism} : If elitism was selected, the length
of elitism (gives an idea for convergence).
}
}
\description{
Performs the genetic algorithm for regression with the 
specified arguments and fitness function to return the optimal
solution to the regression problem.
}
\details{
The Genetic algorithms (GAs) are stochastic search
algorithms that mimic the process of Darwinian natural selection.
GAs simulate the biological evolution, where breeding among highly fit
organisms that ensures desirable sttributes to be passed to future
generations, thereby provides a set of increasingly good candidate
solutions to the optimization. 

The select function enables the application of genetic algorithms to
problems where the decision varibles are encoded as "binary". 
Selection mechanism mimic the process by whcih parents are
chosen to produce offspring. Crossover and mutation operator is
used to produce offspring chromosomes from chosen parent chromosomes.

Rank-based method is applied here to prevent GAs convergence to
a poor local optimum. Parents are chosen based on the rank of values
of negetive AIC function. Any R function, which takes as input an
individual string representing a potential solution, and returns
a numerical value describing its "fitness", is allowable to perform as
a fitness function.

The population size is in the range of the
chromosome length to two times of chromosome length. In this function,
the population size is twice of chromosome length, which is the number
of columns of the feature matrix
}
\examples{
Y <- mtcars$mpg
X <- mtcars[2:11]

select(Y, X)

}
